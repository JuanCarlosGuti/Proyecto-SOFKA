version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: sofka-mysql
    environment:
      MYSQL_ROOT_PASSWORD: Wire2681
      MYSQL_DATABASE: customer_db
      MYSQL_USER: sofka_user
      MYSQL_PASSWORD: sofka_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-databases.sql:/docker-entrypoint-initdb.d/00-init-databases.sql
      - ./customer-service/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-customer-schema.sql
      - ./account-service/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/02-account-schema.sql
    networks:
      - sofka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: sofka-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - sofka-network

  # Service Discovery (Eureka)
  service-discovery:
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    container_name: sofka-service-discovery
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - sofka-network
    depends_on:
      - mysql
      - rabbitmq

  # Customer Service
  customer-service:
    build:
      context: ./customer-service
      dockerfile: Dockerfile
    container_name: sofka-customer-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/customer_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Wire2681
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-discovery:8761/eureka
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - sofka-network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      service-discovery:
        condition: service_started

  # Account Service
  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    container_name: sofka-account-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/account_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Wire2681
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-discovery:8761/eureka
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    networks:
      - sofka-network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      service-discovery:
        condition: service_started

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: sofka-api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-discovery:8761/eureka
    networks:
      - sofka-network
    depends_on:
      - service-discovery
      - customer-service
      - account-service

volumes:
  mysql_data:
  rabbitmq_data:

networks:
  sofka-network:
    driver: bridge
